version: "3.9"
################
################
################
services:
 ################   
    db_postgres:
        image: postgres
        container_name: db_postgres
        ports: 
            - "5400:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=teststorj
        volumes:
            - ./postgres.conf:/etc/postgresql/postgresql.conf
        command: postgres -c config_file=/etc/postgresql/postgresql.conf
        restart: always
################    

################
    docker:
        # storj-sim container
        # must be named docker for docker in docker to work.
        image: docker:dind
        container_name: docker
        privileged: true
        ports:
            - "2375-2376:2375-2376"
        volumes: 
            - ./storj_sim-data:/tmp/storj
            - certs:/certs/client
        command: /bin/sh -c "/tmp/storj/build.sh"
    
    docker-client:
        # Provides a Docker client container.
        image: docker
        container_name: docker-client
        command: sh -c 'while [ 1 ]; do sleep 1000; done'
        environment:
            DOCKER_HOST: tcp://docker:2375
        volumes:
            - certs:/certs/client
################    

################
    redis:
        image: redis:alpine
        container_name: redis
        command: redis-server --requirepass redis_docker
        ports:
            - "6379:6379"   
        volumes:
            - ./redis-data:/var/lib/redis
        environment:
            - REDIS_REPLICATION_MODE=master
################

################
    jenkins:
        image: jenkins/jenkins:lts
        privileged: true
        user: root
        ports:
            - 8083:8080
            - 50003:50000
        container_name: jenkins_pipe
        volumes:
            - ./jenkins_data:/var/jenkins_home
################
################
################
volumes:
    certs: